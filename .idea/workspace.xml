<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a30c929b-8e67-4a4f-99dd-7cb7dbdb5ef7" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/Makefile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/cmd/server/app/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources.local.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.local.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/3f9af386-3308-413a-ae09-8fc5e33896cb.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources/3f9af386-3308-413a-ae09-8fc5e33896cb.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/3f9af386-3308-413a-ae09-8fc5e33896cb/storage_v2/_src_/database/test.kkQ2AA/schema/public.abK9xQ.meta" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources/3f9af386-3308-413a-ae09-8fc5e33896cb/storage_v2/_src_/database/test.kkQ2AA/schema/public.abK9xQ.meta" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/server/app/app.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/server/app/app.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/db/pg/schema/game.sql" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/db/pg/schema/word.sql" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sqlc.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/sqlc.yaml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="HTML File" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2BBqPi1SQFJaSZJnt7Gzt7yBfjU" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.format.on.save.advertiser.fired&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;configurable..is.expanded&quot;: &quot;true&quot;,
    &quot;configurable.GoLibrariesConfigurable.is.expanded&quot;: &quot;true&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/lordvidex/GoProjects/wordle-server&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/internal/config" />
      <recent name="$PROJECT_DIR$/internal/db/mongo" />
      <recent name="$PROJECT_DIR$/internal/db/game" />
      <recent name="$PROJECT_DIR$/internal/game" />
      <recent name="$PROJECT_DIR$/internal/game/commands" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build github.com/lordvidex/wordle-wf/cmd/server">
    <configuration name="go build github.com/lordvidex/wordle-wf/cmd/server" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="wordleServer" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/lordvidex/wordle-wf/cmd/server" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/server/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetRandomWord/should_return_a_random_word_6_times in github.com/lordvidex/wordle-wf/internal/words" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="wordleServer" />
      <working_directory value="$PROJECT_DIR$/internal/words" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/lordvidex/wordle-wf/internal/words" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetRandomWord\E$/^\Qshould_return_a_random_word_6_times\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestSession_Complete in github.com/lordvidex/wordle-wf/internal/game" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="wordleServer" />
      <working_directory value="$PROJECT_DIR$/internal/game" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/lordvidex/wordle-wf/internal/game" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestSession_Complete\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestWord_CompareToCorrect in github.com/lordvidex/wordle-wf/internal/words" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="wordleServer" />
      <working_directory value="$PROJECT_DIR$/internal/words" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/lordvidex/wordle-wf/internal/words" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestWord_CompareToCorrect\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestWord_SetLetterStatus in github.com/lordvidex/wordle-wf/internal/words" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="wordleServer" />
      <working_directory value="$PROJECT_DIR$/internal/words" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/lordvidex/wordle-wf/internal/words" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestWord_SetLetterStatus\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build github.com/lordvidex/wordle-wf/cmd/server" />
        <item itemvalue="Go Test.TestSession_Complete in github.com/lordvidex/wordle-wf/internal/game" />
        <item itemvalue="Go Test.TestWord_SetLetterStatus in github.com/lordvidex/wordle-wf/internal/words" />
        <item itemvalue="Go Test.TestWord_CompareToCorrect in github.com/lordvidex/wordle-wf/internal/words" />
        <item itemvalue="Go Test.TestGetRandomWord/should_return_a_random_word_6_times in github.com/lordvidex/wordle-wf/internal/words" />
      </list>
    </recent_temporary>
  </component>
  <component name="SQLScriptSettings">
    <option name="matrix">
      <map>
        <entry key="POSTGRES.CreateComplete" value="CreateOrReplace=1" />
      </map>
    </option>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>